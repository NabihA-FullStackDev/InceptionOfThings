Vagrant.configure("2") do |config|
    config.vm.box = "debian/bookworm64"
  
    config.vm.define "server" do |server|
      server.vm.hostname = "jucapikS"
      server.vm.network "private_network", ip: "192.168.56.110"
  
      server.vm.provider "virtualbox" do |vb|
        vb.name = "jucapikS"
        vb.cpus = 2
        vb.memory = 2048
      end
  
      server.vm.provision "shell", inline: <<-SHELL
        apt-get update
        apt-get install -y curl docker.io
        systemctl start docker
        systemctl enable docker
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--docker" sh -
        ln -s /usr/local/bin/k3s /usr/local/bin/kubectl || true
  
        cd /vagrant/app1
        docker build -t app1:latest .
        cd /vagrant/app2
        docker build -t app2:latest .
        cd /vagrant/app3
        docker build -t app3:latest .
  
        kubectl apply -f /vagrant/app1/deployment-app1.yaml
        kubectl apply -f /vagrant/app1/service-app1.yaml
        kubectl apply -f /vagrant/app2/deployment-app2.yaml
        kubectl apply -f /vagrant/app2/service-app2.yaml
        kubectl apply -f /vagrant/app3/deployment-app3.yaml
        kubectl apply -f /vagrant/app3/service-app3.yaml
  
        # Installation de l'Ingress Controller NGINX sans webhook d'admission
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
        kubectl patch deployment ingress-nginx-controller -n ingress-nginx --type=json \
          -p='[{"op": "remove", "path": "/spec/template/spec/containers/0/args/1"}]'
  
        echo "Attente que le contrôleur Ingress soit prêt..."
        while [[ $(kubectl get pods -n ingress-nginx -l app.kubernetes.io/component=controller -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do
          sleep 5
        done
  
        kubectl apply -f /vagrant/ingress.yaml
      SHELL
    end
  end
  